---
import { Code } from "astro:components";

const code = `// Developer profile
const me = {
  name: 'Hossam Abubakr',
  skills: Object.values(techStack).flat(),
  interests: [
    'Open Source', 'Security', 'Performance', 'Scalability',
    'AI', 'Writing', 'Gaming', 'Music', 'Photography',
    'Travel', 'Food', 'Books', 'Movies', 'TV', 'Technology',
  ],
};

// Tech stack
const techStack = {
  devOps: ['Git', 'CI/CD', 'Jenkins', 'CircleCI', 'Docker', 'Kubernetes'],
  frontend: ['React', 'Vue.js', 'Next.js', 'TypeScript', 'TailwindCSS'],   
  backend: ['Node.js', 'Express.js', 'PostgreSQL', 'MongoDB', 'MySQL', 'REST APIs'],   
  cloud: ['AWS', 'Google Cloud', 'Microsoft Azure', 'Cloudflare', 'Kafka']   
} as const;

// Contact function
interface ContactType {
  github: string;
  bluesky: string;
  linkedIn: string;
  email: string;
}

const contacts: Record<ContactType, string> = {
  github: 'https://github.com/hossamabubakr',
  bluesky: 'https://bsky.app/profile/hossamabubakr.bsky.social',
  linkedIn: 'https://www.linkedin.com/in/hossamabubakr',
  email: 'hossam.abubakr@gmail.com',
};

const contact = (type: ContactType) => contacts[type] ?? 'Send fax.';
};
`;
---

<Code code={code} lang="js" wrap={true} />

<style is:global>
  /* Custom styling for code block line numbers */
  pre.astro-code {
    @apply bg-transparent !important;
  }

  pre.astro-code code {
    @apply block;
    counter-reset: step;
    counter-increment: step 0;
  }

  pre.astro-code code .line {
    @apply relative;
  }

  pre.astro-code code .line::before {
    content: counter(step);
    counter-increment: step;
    @apply text-gray-600 pr-2;
  }
</style>
